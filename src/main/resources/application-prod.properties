# Profil de production - MySQL via Docker avec optimisations
spring.application.name=exam-spring

# JPA / Hibernate - Configuration optimisée pour la production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# MySQL - Utilise les variables d'environnement du .env.prod
spring.datasource.url=jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:proddb}?useSSL=true&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${DB_USER:produser}
spring.datasource.password=${DB_PASSWORD:prodpassword}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool optimisé pour la production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000

# Logging minimal en production
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.com.humanbooster.exam_spring=INFO