services:
  projects-manager-mysql:
    image: mysql:8.4
    container_name: projects-manager-mysql
    restart: unless-stopped
    env_file:
      - .env.prod
    ports:
      - "127.0.0.1:3306:3306"  # Local uniquement
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "$MYSQL_USER", "-p$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - projects_manager_internal  # Réseau privé pour la DB
    user: "999:993"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL  # Aucune capability nécessaire
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    # Filesystem en lecture seule (empêche l'écriture sauf volumes)
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m          # Fichiers temporaires InnoDB
      - /var/run/mysqld:noexec,nosuid,size=100m  # Socket et PID files

  projects-manager-api:
    image: ghcr.io/laipe/laipe/projects-manager-api:latest
    container_name: projects-manager-api
    depends_on:
      projects-manager-mysql:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080" # Exposé pour Caddy
    networks:
      - caddy_network      # Pour communiquer avec Caddy
      - projects_manager_internal  # Réseau privé pour la DB
    user: "999:993"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL  # Aucune capability nécessaire
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m  # Fichiers temporaires Spring

volumes:
  mysql_data:

networks:
  caddy_network:
    external: true
  projects_manager_internal:
    driver: bridge
    internal: true  # Réseau complètement isolé